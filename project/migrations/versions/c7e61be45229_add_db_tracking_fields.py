"""add DB tracking fields

Revision ID: c7e61be45229
Revises: 49d68a8a911d
Create Date: 2025-10-22 21:16:04.486831

"""
from alembic import op
import sqlmodel
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c7e61be45229'
down_revision = '49d68a8a911d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dbmetrics',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('snapshot_timestamp',
                              sa.DateTime(), nullable=False),
                    sa.Column(
                        'db_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('db_size_bytes', sa.Integer(), nullable=False),
                    sa.Column('active_connections',
                              sa.Integer(), nullable=False),
                    sa.Column('xact_commit', sa.Integer(), nullable=False),
                    sa.Column('xact_rollback', sa.Integer(), nullable=False),
                    sa.Column('blks_read', sa.Integer(), nullable=False),
                    sa.Column('blks_hit', sa.Integer(), nullable=False),
                    sa.Column('temp_files', sa.Integer(), nullable=False),
                    sa.Column('temp_bytes', sa.Integer(), nullable=False),
                    sa.Column('deadlocks', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('indexactivitymetrics',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('snapshot_timestamp',
                              sa.DateTime(), nullable=False),
                    sa.Column('schemaname', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column('tablename', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column('indexname', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column('indexrelid', sa.Integer(), nullable=True),
                    sa.Column('relid', sa.Integer(), nullable=True),
                    sa.Column('idx_scan', sa.Integer(), nullable=False),
                    sa.Column('idx_tup_read', sa.Integer(), nullable=False),
                    sa.Column('idx_tup_fetch', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('tableactivitymetrics',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('snapshot_timestamp',
                              sa.DateTime(), nullable=False),
                    sa.Column('schemaname', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column('tablename', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column('relid', sa.Integer(), nullable=True),
                    sa.Column('seq_scan', sa.Integer(), nullable=False),
                    sa.Column('idx_scan', sa.Integer(), nullable=False),
                    sa.Column('n_tup_ins', sa.Integer(), nullable=False),
                    sa.Column('n_tup_upd', sa.Integer(), nullable=False),
                    sa.Column('n_tup_del', sa.Integer(), nullable=False),
                    sa.Column('n_tup_hot_upd', sa.Integer(), nullable=False),
                    sa.Column('n_dead_tup', sa.Integer(), nullable=False),
                    sa.Column('last_vacuum', sa.DateTime(), nullable=True),
                    sa.Column('last_autovacuum', sa.DateTime(), nullable=True),
                    sa.Column('last_analyze', sa.DateTime(), nullable=True),
                    sa.Column('last_autoanalyze',
                              sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('tablestoragemetrics',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('snapshot_timestamp',
                              sa.DateTime(), nullable=False),
                    sa.Column('schemaname', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column('tablename', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column('relid', sa.Integer(), nullable=True),
                    sa.Column('total_bytes', sa.Integer(), nullable=False),
                    sa.Column('table_bytes', sa.Integer(), nullable=False),
                    sa.Column('index_bytes', sa.Integer(), nullable=False),
                    sa.Column('toast_bytes', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tablestoragemetrics')
    op.drop_table('tableactivitymetrics')
    op.drop_table('indexactivitymetrics')
    op.drop_table('dbmetrics')
    # ### end Alembic commands ###
